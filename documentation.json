{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": []
        },
        {
            "name": "Window",
            "id": "interface-Window-e92427e3ef0219ca3ca610709165487bf3d6456514b5b9794394c71019efab8801949271e293b3b37c8c2ed26c9b69709ca0c60f060765c36404d8d146ad178a",
            "file": "src/stories/JSONForm/JSONForm.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Component, ViewChild, ElementRef, AfterViewInit, Renderer2, Input, Inject, OnInit } from '@angular/core';\r\nimport { DocUtils } from '../docUtils';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    JSONEditor: any;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dm-json-form',\r\n  templateUrl: 'JSONForm.component.html',\r\n  styleUrls: ['JSONForm.component.css']\r\n})\r\n\r\nexport class JSONForm implements AfterViewInit, OnInit {\r\n\r\n  @ViewChild('jsonform') jsonform: ElementRef<HTMLInputElement>;\r\n  @Output()\r\n  change = new EventEmitter<Event>()\r\n  jsonEditor: any = undefined;\r\n\r\n  @Input()\r\n  schema: any = {}\r\n\r\n  @Input()\r\n  data: any = {}\r\n\r\n\r\n  @Input()\r\n  enabled: boolean = true\r\n\r\n  @Input()\r\n  title: string = 'JSON Form Component From Darshan'\r\n\r\n  private editorOptions = {\r\n    iconlib: \"fontawesome5\",\r\n    object_layout: \"normal\",\r\n    schema: this.schema || {},\r\n    show_errors: \"interaction\",\r\n    theme: \"bootstrap4\",\r\n\r\n    startval: this.data || {},\r\n  };\r\n\r\n  inter: NodeJS.Timer;\r\n\r\n\r\n  constructor(private renderer: Renderer2,\r\n    @Inject(DOCUMENT) private document: Document) {\r\n    this.setUpEditor.bind(this);\r\n    this.initJsoneditor.bind(this);\r\n    this.validate.bind(this)\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  setUpEditor() {\r\n    if (this.jsonEditor) {\r\n      this.jsonEditor.destroy();\r\n    }\r\n\r\n    this.editorOptions.schema = this.schema;\r\n\r\n    this.editorOptions.startval = this.data;\r\n\r\n    this.jsonEditor = new window.JSONEditor(\r\n      this.jsonform.nativeElement,\r\n      this.editorOptions\r\n    );\r\n    console.log(\"Inside SetupEditor\", this.jsonEditor)\r\n    this.jsonEditor.on(\"change\", () => {\r\n      if (this.validate()) {\r\n        const value = this.jsonEditor.getValue();\r\n        console.warn(value, \"value\")\r\n\r\n        this.change.emit(value);\r\n      }\r\n\r\n    });\r\n    this.jsonEditor.on(\"ready\", () => {\r\n      // Now the api methods will be available\r\n\r\n      if (this.enabled !== true) {\r\n        this.jsonEditor.disable();\r\n      }\r\n    });\r\n    console.log(this.jsonEditor)\r\n  }\r\n\r\n  validate() {\r\n    const errors = this.jsonEditor.validate();\r\n\r\n    return errors.length === 0;\r\n  }\r\n\r\n  initJsoneditor() {\r\n    // destroy old JSONEditor instance if exists\r\n\r\n\r\n    if (window.JSONEditor) {\r\n      this.setUpEditor();\r\n    } else {\r\n\r\n      this.inter = setInterval(() => {\r\n        console.warn('Waiting for JSON Editor to be defined on the window object.');\r\n\r\n        if (window.JSONEditor && typeof this.editorOptions !== 'string') {\r\n          clearInterval(this.inter);\r\n          this.setUpEditor();\r\n        }\r\n      }, 3000);\r\n    }\r\n    // new instance of JSONEditor\r\n\r\n    // listen for changes\r\n  };\r\n\r\n\r\n\r\n  LoadExternerDeps() {\r\n    const doc = new DocUtils(this.document);\r\n    doc.loadJsScript(this.renderer, \"https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js\");\r\n    doc.loadCss(this.renderer, \"https://use.fontawesome.com/releases/v5.6.1/css/all.css\");\r\n    doc.loadCss(this.renderer, \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css\")\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n\r\n    if (this.jsonform !== undefined) {\r\n\r\n      this.LoadExternerDeps()\r\n      this.initJsoneditor();\r\n\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "JSONEditor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DocUtils",
            "id": "class-DocUtils-8f087a121d2db8592fa9c48f600d2250903a61ada83e81f294681ea7dae683002b0a717bf8fe6a2407fd35befde59d1f6defd4b4e99241bcc32a59ae23eebf8b",
            "file": "src/stories/docUtils.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Renderer2 } from \"@angular/core\";\r\n\r\n\r\nexport class DocUtils  {\r\n\r\n  constructor(private document:any){}\r\n    /**\r\n* Append the JS tag to the Document Body.\r\n* @param renderer The Angular Renderer\r\n* @param src The path to the script\r\n* @returns the script element\r\n*/\r\npublic loadJsScript(renderer: Renderer2, src: string): HTMLScriptElement {\r\n  const script = renderer.createElement('script');\r\n  script.type = 'text/javascript';\r\n  script.src = src;\r\n  renderer.appendChild(this.document.body, script);\r\n  return script;\r\n}\r\n\r\n/**\r\n* Append the JS tag to the Document Body.\r\n* @param renderer The Angular Renderer\r\n* @param src The path to the script\r\n* @returns the script element\r\n*/\r\n public loadCss(renderer: Renderer2, href: string): HTMLLinkElement {\r\n  const link = renderer.createElement('link');\r\n  link.rel = 'stylesheet';\r\n  link.src = href;\r\n  renderer.appendChild(this.document.body, link);\r\n  return link;\r\n}\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "loadCss",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "Renderer2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "href",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HTMLLinkElement",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAppend the JS tag to the Document Body.\n",
                    "description": "<p>Append the JS tag to the Document Body.</p>\n",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 597,
                                "end": 605,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "renderer"
                            },
                            "type": "Renderer2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 591,
                                "end": 596,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>The Angular Renderer</p>\n"
                        },
                        {
                            "name": "href",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 668,
                                "end": 675,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the script element</p>\n"
                        }
                    ]
                },
                {
                    "name": "loadJsScript",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "Renderer2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "src",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HTMLScriptElement",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAppend the JS tag to the Document Body.\n",
                    "description": "<p>Append the JS tag to the Document Body.</p>\n",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 176,
                                "end": 184,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "renderer"
                            },
                            "type": "Renderer2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 170,
                                "end": 175,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>The Angular Renderer</p>\n"
                        },
                        {
                            "name": {
                                "pos": 216,
                                "end": 219,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "src"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 210,
                                "end": 215,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "param"
                            },
                            "comment": "<p>The path to the script</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 247,
                                "end": 254,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the script element</p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "extends": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b0fa98266b134d340eff7840e51282c0c4024b0de916d9d4b23a57ca55823332e7b357792b3e1d1cde783a9e41c93aeb6a776acbd49eec6c209a574c5bce7b07",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultSchema",
                    "defaultValue": "{\r\n    title: \"Person\",\r\n    type: \"object\",\r\n    required: [\r\n      \"name\",\r\n      \"age\",\r\n      \"date\",\r\n      \"favorite_color\",\r\n      \"gender\",\r\n      \"location\",\r\n      \"pets\",\r\n    ],\r\n    properties: {\r\n      name: {\r\n        type: \"string\",\r\n        description: \"First and Last name\",\r\n        minLength: 4,\r\n        default: \"Jeremy Dorn\",\r\n      },\r\n      age: {\r\n        type: \"integer\",\r\n        default: 25,\r\n        minimum: 18,\r\n        maximum: 99,\r\n      },\r\n      favorite_color: {\r\n        type: \"string\",\r\n        format: \"color\",\r\n        title: \"favorite color\",\r\n        default: \"#ffa500\",\r\n      },\r\n      gender: {\r\n        type: \"string\",\r\n        enum: [\"male\", \"female\", \"other\"],\r\n      },\r\n      date: {\r\n        type: \"string\",\r\n        format: \"date\",\r\n        options: {\r\n          flatpickr: {},\r\n        },\r\n      },\r\n      location: {\r\n        type: \"object\",\r\n        title: \"Location\",\r\n        required: [\"city\", \"state\", \"citystate\"],\r\n        properties: {\r\n          city: {\r\n            type: \"string\",\r\n            default: \"San Francisco\",\r\n          },\r\n          state: {\r\n            type: \"string\",\r\n            default: \"CA\",\r\n          },\r\n          citystate: {\r\n            type: \"string\",\r\n            description:\r\n              \"This is generated automatically from the previous two fields\",\r\n            template: \"{{city}}, {{state}}\",\r\n            watch: {\r\n              city: \"location.city\",\r\n              state: \"location.state\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      pets: {\r\n        type: \"array\",\r\n        format: \"table\",\r\n        title: \"Pets\",\r\n        uniqueItems: true,\r\n        items: {\r\n          type: \"object\",\r\n          title: \"Pet\",\r\n          properties: {\r\n            type: {\r\n              type: \"string\",\r\n              enum: [\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"],\r\n              default: \"dog\",\r\n            },\r\n            name: {\r\n              type: \"string\",\r\n            },\r\n          },\r\n        },\r\n        default: [\r\n          {\r\n            type: \"dog\",\r\n            name: \"Walter\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "item",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "title",
                    "defaultValue": "'dm-ng-components'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ShowItem",
                    "args": [
                        {
                            "name": "_item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'dm-ng-components';\r\n\r\n   defaultSchema = {\r\n    title: \"Person\",\r\n    type: \"object\",\r\n    required: [\r\n      \"name\",\r\n      \"age\",\r\n      \"date\",\r\n      \"favorite_color\",\r\n      \"gender\",\r\n      \"location\",\r\n      \"pets\",\r\n    ],\r\n    properties: {\r\n      name: {\r\n        type: \"string\",\r\n        description: \"First and Last name\",\r\n        minLength: 4,\r\n        default: \"Jeremy Dorn\",\r\n      },\r\n      age: {\r\n        type: \"integer\",\r\n        default: 25,\r\n        minimum: 18,\r\n        maximum: 99,\r\n      },\r\n      favorite_color: {\r\n        type: \"string\",\r\n        format: \"color\",\r\n        title: \"favorite color\",\r\n        default: \"#ffa500\",\r\n      },\r\n      gender: {\r\n        type: \"string\",\r\n        enum: [\"male\", \"female\", \"other\"],\r\n      },\r\n      date: {\r\n        type: \"string\",\r\n        format: \"date\",\r\n        options: {\r\n          flatpickr: {},\r\n        },\r\n      },\r\n      location: {\r\n        type: \"object\",\r\n        title: \"Location\",\r\n        required: [\"city\", \"state\", \"citystate\"],\r\n        properties: {\r\n          city: {\r\n            type: \"string\",\r\n            default: \"San Francisco\",\r\n          },\r\n          state: {\r\n            type: \"string\",\r\n            default: \"CA\",\r\n          },\r\n          citystate: {\r\n            type: \"string\",\r\n            description:\r\n              \"This is generated automatically from the previous two fields\",\r\n            template: \"{{city}}, {{state}}\",\r\n            watch: {\r\n              city: \"location.city\",\r\n              state: \"location.state\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      pets: {\r\n        type: \"array\",\r\n        format: \"table\",\r\n        title: \"Pets\",\r\n        uniqueItems: true,\r\n        items: {\r\n          type: \"object\",\r\n          title: \"Pet\",\r\n          properties: {\r\n            type: {\r\n              type: \"string\",\r\n              enum: [\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"],\r\n              default: \"dog\",\r\n            },\r\n            name: {\r\n              type: \"string\",\r\n            },\r\n          },\r\n        },\r\n        default: [\r\n          {\r\n            type: \"dog\",\r\n            name: \"Walter\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  item = {}\r\n\r\n  ShowItem(_item:any){\r\n    console.warn('Hello.....' ,_item)\r\n    this.item = _item;\r\n    console.log(this.item);\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<h2>Hello Trial</h2>\r\n<div class=\"content\"><span>dm-ng-components app is running!</span></div>\r\n{{item | json}}\r\n<dm-json-form title=\"Hello world\" (change)=\"ShowItem($event)\" [schema]=\"defaultSchema\" [data]=\"item\">  </dm-json-form>\r\n"
        },
        {
            "name": "AutoComplete",
            "id": "component-AutoComplete-d6b0af2303a182ed85f7479dae1f7b27ed11216a06b645568025ed760b234f418bd5cf9207f194b094876cbcbdb4a0316a7476992e511eb24e40983c8c21bdf4",
            "file": "src/stories/Autocomplete/Autocomplete.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dm-autocomplete",
            "styleUrls": [
                "Autocomplete.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "Autocomplete.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "id",
                    "defaultValue": "'dm-autocomplete'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "inputClass",
                    "defaultValue": "'dm-textbox'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "keepopen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "keyprop",
                    "defaultValue": "'key'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "mincharAjax",
                    "defaultValue": "3",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "records",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "template",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "textprop",
                    "defaultValue": "'name'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "texttemplate",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "url",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "input",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'myInput'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "autocomplete",
                    "args": [
                        {
                            "name": "inp",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "rec",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "inp",
                            "type": "HTMLInputElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "rec",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "LoadExternerDeps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 258,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setAutoComplete",
                    "args": [
                        {
                            "name": "records",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "undefined"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "records",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "undefined",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Component, ViewChild, ElementRef, AfterViewInit, Renderer2, Input, Inject, OnInit } from '@angular/core';\r\nimport { DocUtils } from '../docUtils';\r\nimport { ViewEncapsulation } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'dm-autocomplete',\r\n  templateUrl: 'Autocomplete.component.html',\r\n  styleUrls: ['Autocomplete.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class AutoComplete implements AfterViewInit, OnInit {\r\n\r\n  @ViewChild('myInput') inp: ElementRef<HTMLInputElement>;\r\n\r\n  @Output()\r\n  change = new EventEmitter<any>()\r\n  @Output()\r\n  input = new EventEmitter<string>()\r\n\r\n  //#region Input Props\r\n\r\n  @Input()\r\n  public records: any[] = []\r\n  @Input()\r\n  public placeholder: string = ''\r\n  @Input()\r\n  public keyprop: string = 'key'\r\n  @Input()\r\n  public textprop: string = 'name'\r\n  @Input()\r\n  public keepopen: boolean = false\r\n  @Input()\r\n  public texttemplate: string = null\r\n  @Input()\r\n  public template: string = null\r\n  @Input()\r\n  public mincharAjax: number = 3\r\n  @Input()\r\n  public url: string = null\r\n  @Input()\r\n  public inputClass: string = 'dm-textbox'\r\n\r\n  @Input()\r\n  public id: string = 'dm-autocomplete'\r\n\r\n  //#endregion\r\n\r\n\r\n  //#region Properties\r\n\r\n  private _isLoading: boolean;\r\n  public get isLoading(): boolean {\r\n    return this._isLoading;\r\n  }\r\n  public set isLoading(v: boolean) {\r\n    this._isLoading = v;\r\n  }\r\n\r\n\r\n  //#endregion\r\n\r\n\r\n\r\n  constructor(private renderer: Renderer2,\r\n    @Inject(DOCUMENT) private document: Document) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n   \r\n      \r\n      this.setAutoComplete()\r\n    }, 200);\r\n  }\r\n\r\n  setAutoComplete(records: any[] = undefined) {\r\n\r\n    if (records) {\r\n      this.autocomplete(this.inp.nativeElement, records)\r\n\r\n    } else {\r\n      this.autocomplete(this.inp.nativeElement, this.records)\r\n\r\n    }\r\n  }\r\n\r\n  autocomplete(inp: HTMLInputElement, rec: any[]) {\r\n\r\n    let arr = rec != null ? rec : this.records;\r\n    const that = this;\r\n    /*the autocomplete function takes two arguments,\r\n    the text field element and an array of possible autocompleted values:*/\r\n    let currentFocus: number;\r\n    const Tmpl = (rec: any, _tempStr: string) => {\r\n\r\n\r\n      let _template = _tempStr;\r\n\r\n      //Get Child\r\n      const gc = (key: string, item: any) => {\r\n\r\n        let retItem = item;\r\n        const keys = key.split('.');\r\n        for (const _key of keys) {\r\n          const split = _key.split('.');\r\n          const newKey = split.length > 1 ? split[1] : split[0];\r\n          retItem = retItem[newKey]\r\n        }\r\n\r\n\r\n        return retItem;\r\n      }\r\n      const re = /{(.*?)}/g;\r\n\r\n      const tkeys = _template.match(re)\r\n\r\n      tkeys.forEach((k) => {\r\n        k = k.replace('{', '').replace('}', '')\r\n        if (k.indexOf('.') === -1)\r\n          _template = _template.replace(`{${k}}`, rec[k]);\r\n        else\r\n          _template = _template.replace(`{${k}}`, gc(k, rec))\r\n\r\n      })\r\n\r\n      return _template;\r\n\r\n    }\r\n\r\n    function addActive(x: any): void | boolean {\r\n      /*a function to classify an item as \"active\":*/\r\n      if (!x) return false;\r\n      /*start by removing the \"active\" class on all items:*/\r\n      removeActive(x);\r\n      if (currentFocus >= x.length) currentFocus = 0;\r\n      if (currentFocus < 0) currentFocus = (x.length - 1);\r\n      /*add class \"autocomplete-active\":*/\r\n      x[currentFocus].classList.add(\"autocomplete-active\");\r\n    }\r\n\r\n    function removeActive(x: any[]) {\r\n      /*a function to remove the \"active\" class from all autocomplete items:*/\r\n      for (var i = 0; i < x.length; i++) {\r\n        x[i].classList.remove(\"autocomplete-active\");\r\n      }\r\n    }\r\n\r\n    function closeAllLists(elmnt: HTMLElement | EventTarget = undefined) {\r\n      /*close all autocomplete lists in the document,\r\n      except the one passed as an argument:*/\r\n      var x = document.querySelectorAll(\".autocomplete-items\");\r\n      for (var i = 0; i < x.length; i++) {\r\n        if (elmnt != x[i] && elmnt != inp) {\r\n          x[i].parentNode.removeChild(x[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    const isNull = (obj:any):Boolean => obj == null || obj == 'null'\r\n\r\n    /*execute a function when someone writes in the text field:*/\r\n    inp.addEventListener(\"input\", async (e:any): Promise<any> => {\r\n      e.preventDefault();\r\n      var a, b, i, val: any = e.target.value;\r\n\r\n      if (val !== 0)\r\n        //that.fireEvent('input', 'value', val)\r\n        that.input.emit(val)\r\n      /*close any already open lists of autocompleted values*/\r\n      if ((that.url != null && that.url != 'null') && that.mincharAjax <= val.length) {\r\n        if (that.isLoading === true) return;\r\n        const res = await fetch(that.url.replace('=q', `=${val}`))\r\n        const records = await res.json();\r\n        that.isLoading = false;\r\n        arr = records;\r\n      }\r\n      closeAllLists();\r\n      if (!val) { return false; }\r\n      currentFocus = -1;\r\n      /*create a DIV element that will contain the items (values):*/\r\n      a = document.createElement(\"DIV\");\r\n      a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n      a.setAttribute(\"class\", \"autocomplete-items\");\r\n      /*append the DIV element as a child of the autocomplete container:*/\r\n      e.target.parentNode.appendChild(a);\r\n      if (arr.length === 0) arr = that.records;\r\n      debugger;\r\n      /*for each item in the array...*/\r\n      for (i = 0; i < arr.length; i++) {\r\n        /*check if the item starts with the same letters as the text field value:*/\r\n        if (arr[i][that.textprop].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n          /*create a DIV element for each matching element:*/\r\n          b = document.createElement(\"DIV\");\r\n          /*make the matching letters bold:*/\r\n          b.innerHTML = isNull(that.template) == false ? Tmpl(arr[i], that.template) : \"<strong>\" + arr[i][that.textprop].substr(0, val.length) + \"</strong>\";\r\n          if (isNull(that.template)) {\r\n\r\n            b.innerHTML += arr[i][that.textprop].substr(val.length);\r\n          }\r\n          /*insert a input field that will hold the current array item's value:*/\r\n          b.innerHTML += \"<input type='hidden' value='\" + arr[i][that.keyprop] + \"'>\";\r\n          b.innerHTML += \"<input type='hidden' value='\" + ((isNull(that.texttemplate) == false) ? Tmpl(arr[i], that.texttemplate) : arr[i][that.textprop]) + \"'>\";\r\n          /*execute a function when someone clicks on the item value (DIV element):*/\r\n          b.addEventListener(\"click\", function (e) {\r\n            /*insert the value for the autocomplete text field:*/\r\n            inp.value = this.getElementsByTagName(\"input\")[1].value;\r\n            inp.dataset['key'] = this.getElementsByTagName(\"input\")[0].value;\r\n            //that.fireEvent('change', 'value', { key: inp.dataset.key, value: inp.value })\r\n            that.change.emit({ key: inp.dataset['key'], value: inp.value })\r\n            /*close the list of autocompleted values,\r\n            (or any other open lists of autocompleted values:*/\r\n            closeAllLists();\r\n          });\r\n          a.appendChild(b);\r\n        }\r\n      }\r\n    });\r\n    /*execute a function presses a key on the keyboard:*/\r\n    inp.addEventListener(\"keydown\", function (e) {\r\n      debugger;\r\n      var x: any = document.getElementById(that.id + \"autocomplete-list\");\r\n      if (x) x = x.getElementsByTagName(\"div\");\r\n      if (e.keyCode == 40) {\r\n        /*If the arrow DOWN key is pressed,\r\n        increase the currentFocus variable:*/\r\n        currentFocus++;\r\n        /*and and make the current item more visible:*/\r\n        addActive(x);\r\n      } else if (e.keyCode == 38) { //up\r\n        /*If the arrow UP key is pressed,\r\n        decrease the currentFocus variable:*/\r\n        currentFocus--;\r\n        /*and and make the current item more visible:*/\r\n        addActive(x);\r\n      } else if (e.keyCode == 13) {\r\n        /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n        e.preventDefault();\r\n        if (currentFocus > -1) {\r\n          /*and simulate a click on the \"active\" item:*/\r\n          if (x) x[currentFocus].click();\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n    /*execute a function when someone clicks in the document:*/\r\n    document.addEventListener(\"click\", function (e) {\r\n      if (that.keepopen === false)\r\n        closeAllLists(e.target);\r\n    });\r\n  }\r\n\r\n  LoadExternerDeps() {\r\n  \r\n  \r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".dm-textbox {\r\n  width: 350px;\r\n  height: 35px;\r\n  border: 1px solid grey;\r\n}\r\n\r\n.autocomplete {\r\n  /*the container must be positioned relative:*/\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.autocomplete-items {\r\n  position: absolute;\r\n  border: 1px solid #d4d4d4;\r\n  border-bottom: none;\r\n  border-top: none;\r\n  z-index: 99;\r\n  /*position the autocomplete items to be the same width as the container:*/\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n}\r\n\r\n.autocomplete-items div {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n  border-bottom: 1px solid #d4d4d4;\r\n}\r\n\r\n.autocomplete-items div:hover {\r\n  /*when hovering an item:*/\r\n  background-color: #e9e9e9;\r\n}\r\n\r\n.autocomplete-active {\r\n  /*when navigating through the items using the arrow keys:*/\r\n  background-color: DodgerBlue !important;\r\n  color: #ffffff;\r\n}\r\n\r\n.trial {\r\n  height: 100px;\r\n  width: 100px;\r\n  background-color: red;\r\n}\r\n",
                    "styleUrl": "Autocomplete.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 62,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "accessors": {
                "isLoading": {
                    "name": "isLoading",
                    "setSignature": {
                        "name": "isLoading",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "v",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 60,
                        "jsdoctags": [
                            {
                                "name": "v",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "isLoading",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 57
                    }
                }
            },
            "templateData": "<div class=\"autocomplete\">\r\n  <input\r\n    id=\"myInput\"\r\n    #myInput\r\n    autocomplete=\"off\"\r\n    class=\"{{ this.inputClass }}\"\r\n    type=\"text\"\r\n    placeholder=\"{{ this.placeholder }}\"\r\n  />\r\n</div>\r\n"
        },
        {
            "name": "JSONForm",
            "id": "component-JSONForm-e92427e3ef0219ca3ca610709165487bf3d6456514b5b9794394c71019efab8801949271e293b3b37c8c2ed26c9b69709ca0c60f060765c36404d8d146ad178a",
            "file": "src/stories/JSONForm/JSONForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dm-json-form",
            "styleUrls": [
                "JSONForm.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "JSONForm.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "enabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'JSON Form Component From Darshan'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "editorOptions",
                    "defaultValue": "{\r\n    iconlib: \"fontawesome5\",\r\n    object_layout: \"normal\",\r\n    schema: this.schema || {},\r\n    show_errors: \"interaction\",\r\n    theme: \"bootstrap4\",\r\n\r\n    startval: this.data || {},\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "inter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timer",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "jsonEditor",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "jsonform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'jsonform'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initJsoneditor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "LoadExternerDeps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUpEditor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Component, ViewChild, ElementRef, AfterViewInit, Renderer2, Input, Inject, OnInit } from '@angular/core';\r\nimport { DocUtils } from '../docUtils';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    JSONEditor: any;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dm-json-form',\r\n  templateUrl: 'JSONForm.component.html',\r\n  styleUrls: ['JSONForm.component.css']\r\n})\r\n\r\nexport class JSONForm implements AfterViewInit, OnInit {\r\n\r\n  @ViewChild('jsonform') jsonform: ElementRef<HTMLInputElement>;\r\n  @Output()\r\n  change = new EventEmitter<Event>()\r\n  jsonEditor: any = undefined;\r\n\r\n  @Input()\r\n  schema: any = {}\r\n\r\n  @Input()\r\n  data: any = {}\r\n\r\n\r\n  @Input()\r\n  enabled: boolean = true\r\n\r\n  @Input()\r\n  title: string = 'JSON Form Component From Darshan'\r\n\r\n  private editorOptions = {\r\n    iconlib: \"fontawesome5\",\r\n    object_layout: \"normal\",\r\n    schema: this.schema || {},\r\n    show_errors: \"interaction\",\r\n    theme: \"bootstrap4\",\r\n\r\n    startval: this.data || {},\r\n  };\r\n\r\n  inter: NodeJS.Timer;\r\n\r\n\r\n  constructor(private renderer: Renderer2,\r\n    @Inject(DOCUMENT) private document: Document) {\r\n    this.setUpEditor.bind(this);\r\n    this.initJsoneditor.bind(this);\r\n    this.validate.bind(this)\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  setUpEditor() {\r\n    if (this.jsonEditor) {\r\n      this.jsonEditor.destroy();\r\n    }\r\n\r\n    this.editorOptions.schema = this.schema;\r\n\r\n    this.editorOptions.startval = this.data;\r\n\r\n    this.jsonEditor = new window.JSONEditor(\r\n      this.jsonform.nativeElement,\r\n      this.editorOptions\r\n    );\r\n    console.log(\"Inside SetupEditor\", this.jsonEditor)\r\n    this.jsonEditor.on(\"change\", () => {\r\n      if (this.validate()) {\r\n        const value = this.jsonEditor.getValue();\r\n        console.warn(value, \"value\")\r\n\r\n        this.change.emit(value);\r\n      }\r\n\r\n    });\r\n    this.jsonEditor.on(\"ready\", () => {\r\n      // Now the api methods will be available\r\n\r\n      if (this.enabled !== true) {\r\n        this.jsonEditor.disable();\r\n      }\r\n    });\r\n    console.log(this.jsonEditor)\r\n  }\r\n\r\n  validate() {\r\n    const errors = this.jsonEditor.validate();\r\n\r\n    return errors.length === 0;\r\n  }\r\n\r\n  initJsoneditor() {\r\n    // destroy old JSONEditor instance if exists\r\n\r\n\r\n    if (window.JSONEditor) {\r\n      this.setUpEditor();\r\n    } else {\r\n\r\n      this.inter = setInterval(() => {\r\n        console.warn('Waiting for JSON Editor to be defined on the window object.');\r\n\r\n        if (window.JSONEditor && typeof this.editorOptions !== 'string') {\r\n          clearInterval(this.inter);\r\n          this.setUpEditor();\r\n        }\r\n      }, 3000);\r\n    }\r\n    // new instance of JSONEditor\r\n\r\n    // listen for changes\r\n  };\r\n\r\n\r\n\r\n  LoadExternerDeps() {\r\n    const doc = new DocUtils(this.document);\r\n    doc.loadJsScript(this.renderer, \"https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js\");\r\n    doc.loadCss(this.renderer, \"https://use.fontawesome.com/releases/v5.6.1/css/all.css\");\r\n    doc.loadCss(this.renderer, \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css\")\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n\r\n    if (this.jsonform !== undefined) {\r\n\r\n      this.LoadExternerDeps()\r\n      this.initJsoneditor();\r\n\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "JSONForm.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "templateData": "<link\r\n  href=\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\"\r\n  rel=\"stylesheet\"\r\n/>\r\n<link\r\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css\"\r\n  rel=\"stylesheet\"\r\n/>\r\n\r\n<script src=\"https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js\"></script>\r\n\r\n{{ title }}\r\n<div id=\"jsonform\" #jsonform></div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-6d1c6cf917790166e3e44af94b3f9158913b094b6a1bf38d6897bd419cdd9bb9bf2f168185828a820fc90a56d9765816d63293e901c8f141be4639ffc8be9a43",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {JSONForm} from '../stories/JSONForm/JSONForm.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JSONForm\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "JSONForm"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  change: action('change'),\r\n  input: action('input'),\r\n\r\n}"
            },
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onChange: action('onChange'),\r\n}"
            },
            {
                "name": "AutoAjax",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCtrl.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "data",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { name: 'Afghanistan', code: 'AF' },\r\n  { name: 'Åland Islands', code: 'AX' },\r\n  { name: 'Albania', code: 'AL' },\r\n  { name: 'Algeria', code: 'DZ' },\r\n  { name: 'American Samoa', code: 'AS' },\r\n  { name: 'AndorrA', code: 'AD' },\r\n  { name: 'Angola', code: 'AO' },\r\n  { name: 'Anguilla', code: 'AI' },\r\n  { name: 'Antarctica', code: 'AQ' },\r\n  { name: 'Antigua and Barbuda', code: 'AG' },\r\n  { name: 'Argentina', code: 'AR' },\r\n  { name: 'Armenia', code: 'AM' },\r\n  { name: 'Aruba', code: 'AW' },\r\n  { name: 'Australia', code: 'AU' },\r\n  { name: 'Austria', code: 'AT' },\r\n  { name: 'Azerbaijan', code: 'AZ' },\r\n  { name: 'Bahamas', code: 'BS' },\r\n  { name: 'Bahrain', code: 'BH' },\r\n  { name: 'Bangladesh', code: 'BD' },\r\n  { name: 'Barbados', code: 'BB' },\r\n  { name: 'Belarus', code: 'BY' },\r\n  { name: 'Belgium', code: 'BE' },\r\n  { name: 'Belize', code: 'BZ' },\r\n  { name: 'Benin', code: 'BJ' },\r\n  { name: 'Bermuda', code: 'BM' },\r\n  { name: 'Bhutan', code: 'BT' },\r\n  { name: 'Bolivia', code: 'BO' },\r\n  { name: 'Bosnia and Herzegovina', code: 'BA' },\r\n  { name: 'Botswana', code: 'BW' },\r\n  { name: 'Bouvet Island', code: 'BV' },\r\n  { name: 'Brazil', code: 'BR' },\r\n  { name: 'British Indian Ocean Territory', code: 'IO' },\r\n  { name: 'Brunei Darussalam', code: 'BN' },\r\n  { name: 'Bulgaria', code: 'BG' },\r\n  { name: 'Burkina Faso', code: 'BF' },\r\n  { name: 'Burundi', code: 'BI' },\r\n  { name: 'Cambodia', code: 'KH' },\r\n  { name: 'Cameroon', code: 'CM' },\r\n  { name: 'Canada', code: 'CA' },\r\n  { name: 'Cape Verde', code: 'CV' },\r\n  { name: 'Cayman Islands', code: 'KY' },\r\n  { name: 'Central African Republic', code: 'CF' },\r\n  { name: 'Chad', code: 'TD' },\r\n  { name: 'Chile', code: 'CL' },\r\n  { name: 'China', code: 'CN' },\r\n  { name: 'Christmas Island', code: 'CX' },\r\n  { name: 'Cocos (Keeling) Islands', code: 'CC' },\r\n  { name: 'Colombia', code: 'CO' },\r\n  { name: 'Comoros', code: 'KM' },\r\n  { name: 'Congo', code: 'CG' },\r\n  { name: 'Congo, The Democratic Republic of the', code: 'CD' },\r\n  { name: 'Cook Islands', code: 'CK' },\r\n  { name: 'Costa Rica', code: 'CR' },\r\n  { name: 'Cote D\\'Ivoire', code: 'CI' },\r\n  { name: 'Croatia', code: 'HR' },\r\n  { name: 'Cuba', code: 'CU' },\r\n  { name: 'Cyprus', code: 'CY' },\r\n  { name: 'Czech Republic', code: 'CZ' },\r\n  { name: 'Denmark', code: 'DK' },\r\n  { name: 'Djibouti', code: 'DJ' },\r\n  { name: 'Dominica', code: 'DM' },\r\n  { name: 'Dominican Republic', code: 'DO' },\r\n  { name: 'Ecuador', code: 'EC' },\r\n  { name: 'Egypt', code: 'EG' },\r\n  { name: 'El Salvador', code: 'SV' },\r\n  { name: 'Equatorial Guinea', code: 'GQ' },\r\n  { name: 'Eritrea', code: 'ER' },\r\n  { name: 'Estonia', code: 'EE' },\r\n  { name: 'Ethiopia', code: 'ET' },\r\n  { name: 'Falkland Islands (Malvinas)', code: 'FK' },\r\n  { name: 'Faroe Islands', code: 'FO' },\r\n  { name: 'Fiji', code: 'FJ' },\r\n  { name: 'Finland', code: 'FI' },\r\n  { name: 'France', code: 'FR' },\r\n  { name: 'French Guiana', code: 'GF' },\r\n  { name: 'French Polynesia', code: 'PF' },\r\n  { name: 'French Southern Territories', code: 'TF' },\r\n  { name: 'Gabon', code: 'GA' },\r\n  { name: 'Gambia', code: 'GM' },\r\n  { name: 'Georgia', code: 'GE' },\r\n  { name: 'Germany', code: 'DE' },\r\n  { name: 'Ghana', code: 'GH' },\r\n  { name: 'Gibraltar', code: 'GI' },\r\n  { name: 'Greece', code: 'GR' },\r\n  { name: 'Greenland', code: 'GL' },\r\n  { name: 'Grenada', code: 'GD' },\r\n  { name: 'Guadeloupe', code: 'GP' },\r\n  { name: 'Guam', code: 'GU' },\r\n  { name: 'Guatemala', code: 'GT' },\r\n  { name: 'Guernsey', code: 'GG' },\r\n  { name: 'Guinea', code: 'GN' },\r\n  { name: 'Guinea-Bissau', code: 'GW' },\r\n  { name: 'Guyana', code: 'GY' },\r\n  { name: 'Haiti', code: 'HT' },\r\n  { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\r\n  { name: 'Holy See (Vatican City State)', code: 'VA' },\r\n  { name: 'Honduras', code: 'HN' },\r\n  { name: 'Hong Kong', code: 'HK' },\r\n  { name: 'Hungary', code: 'HU' },\r\n  { name: 'Iceland', code: 'IS' },\r\n  { name: 'India', code: 'IN' },\r\n  { name: 'Indonesia', code: 'ID' },\r\n  { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n  { name: 'Iraq', code: 'IQ' },\r\n  { name: 'Ireland', code: 'IE' },\r\n  { name: 'Isle of Man', code: 'IM' },\r\n  { name: 'Israel', code: 'IL' },\r\n  { name: 'Italy', code: 'IT' },\r\n  { name: 'Jamaica', code: 'JM' },\r\n  { name: 'Japan', code: 'JP' },\r\n  { name: 'Jersey', code: 'JE' },\r\n  { name: 'Jordan', code: 'JO' },\r\n  { name: 'Kazakhstan', code: 'KZ' },\r\n  { name: 'Kenya', code: 'KE' },\r\n  { name: 'Kiribati', code: 'KI' },\r\n  { name: 'Korea, Democratic People\\'S Republic of', code: 'KP' },\r\n  { name: 'Korea, Republic of', code: 'KR' },\r\n  { name: 'Kuwait', code: 'KW' },\r\n  { name: 'Kyrgyzstan', code: 'KG' },\r\n  { name: 'Lao People\\'S Democratic Republic', code: 'LA' },\r\n  { name: 'Latvia', code: 'LV' },\r\n  { name: 'Lebanon', code: 'LB' },\r\n  { name: 'Lesotho', code: 'LS' },\r\n  { name: 'Liberia', code: 'LR' },\r\n  { name: 'Libyan Arab Jamahiriya', code: 'LY' },\r\n  { name: 'Liechtenstein', code: 'LI' },\r\n  { name: 'Lithuania', code: 'LT' },\r\n  { name: 'Luxembourg', code: 'LU' },\r\n  { name: 'Macao', code: 'MO' },\r\n  { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' },\r\n  { name: 'Madagascar', code: 'MG' },\r\n  { name: 'Malawi', code: 'MW' },\r\n  { name: 'Malaysia', code: 'MY' },\r\n  { name: 'Maldives', code: 'MV' },\r\n  { name: 'Mali', code: 'ML' },\r\n  { name: 'Malta', code: 'MT' },\r\n  { name: 'Marshall Islands', code: 'MH' },\r\n  { name: 'Martinique', code: 'MQ' },\r\n  { name: 'Mauritania', code: 'MR' },\r\n  { name: 'Mauritius', code: 'MU' },\r\n  { name: 'Mayotte', code: 'YT' },\r\n  { name: 'Mexico', code: 'MX' },\r\n  { name: 'Micronesia, Federated States of', code: 'FM' },\r\n  { name: 'Moldova, Republic of', code: 'MD' },\r\n  { name: 'Monaco', code: 'MC' },\r\n  { name: 'Mongolia', code: 'MN' },\r\n  { name: 'Montserrat', code: 'MS' },\r\n  { name: 'Morocco', code: 'MA' },\r\n  { name: 'Mozambique', code: 'MZ' },\r\n  { name: 'Myanmar', code: 'MM' },\r\n  { name: 'Namibia', code: 'NA' },\r\n  { name: 'Nauru', code: 'NR' },\r\n  { name: 'Nepal', code: 'NP' },\r\n  { name: 'Netherlands', code: 'NL' },\r\n  { name: 'Netherlands Antilles', code: 'AN' },\r\n  { name: 'New Caledonia', code: 'NC' },\r\n  { name: 'New Zealand', code: 'NZ' },\r\n  { name: 'Nicaragua', code: 'NI' },\r\n  { name: 'Niger', code: 'NE' },\r\n  { name: 'Nigeria', code: 'NG' },\r\n  { name: 'Niue', code: 'NU' },\r\n  { name: 'Norfolk Island', code: 'NF' },\r\n  { name: 'Northern Mariana Islands', code: 'MP' },\r\n  { name: 'Norway', code: 'NO' },\r\n  { name: 'Oman', code: 'OM' },\r\n  { name: 'Pakistan', code: 'PK' },\r\n  { name: 'Palau', code: 'PW' },\r\n  { name: 'Palestinian Territory, Occupied', code: 'PS' },\r\n  { name: 'Panama', code: 'PA' },\r\n  { name: 'Papua New Guinea', code: 'PG' },\r\n  { name: 'Paraguay', code: 'PY' },\r\n  { name: 'Peru', code: 'PE' },\r\n  { name: 'Philippines', code: 'PH' },\r\n  { name: 'Pitcairn', code: 'PN' },\r\n  { name: 'Poland', code: 'PL' },\r\n  { name: 'Portugal', code: 'PT' },\r\n  { name: 'Puerto Rico', code: 'PR' },\r\n  { name: 'Qatar', code: 'QA' },\r\n  { name: 'Reunion', code: 'RE' },\r\n  { name: 'Romania', code: 'RO' },\r\n  { name: 'Russian Federation', code: 'RU' },\r\n  { name: 'RWANDA', code: 'RW' },\r\n  { name: 'Saint Helena', code: 'SH' },\r\n  { name: 'Saint Kitts and Nevis', code: 'KN' },\r\n  { name: 'Saint Lucia', code: 'LC' },\r\n  { name: 'Saint Pierre and Miquelon', code: 'PM' },\r\n  { name: 'Saint Vincent and the Grenadines', code: 'VC' },\r\n  { name: 'Samoa', code: 'WS' },\r\n  { name: 'San Marino', code: 'SM' },\r\n  { name: 'Sao Tome and Principe', code: 'ST' },\r\n  { name: 'Saudi Arabia', code: 'SA' },\r\n  { name: 'Senegal', code: 'SN' },\r\n  { name: 'Serbia and Montenegro', code: 'CS' },\r\n  { name: 'Seychelles', code: 'SC' },\r\n  { name: 'Sierra Leone', code: 'SL' },\r\n  { name: 'Singapore', code: 'SG' },\r\n  { name: 'Slovakia', code: 'SK' },\r\n  { name: 'Slovenia', code: 'SI' },\r\n  { name: 'Solomon Islands', code: 'SB' },\r\n  { name: 'Somalia', code: 'SO' },\r\n  { name: 'South Africa', code: 'ZA' },\r\n  { name: 'South Georgia and the South Sandwich Islands', code: 'GS' },\r\n  { name: 'Spain', code: 'ES' },\r\n  { name: 'Sri Lanka', code: 'LK' },\r\n  { name: 'Sudan', code: 'SD' },\r\n  { name: 'Suriname', code: 'SR' },\r\n  { name: 'Svalbard and Jan Mayen', code: 'SJ' },\r\n  { name: 'Swaziland', code: 'SZ' },\r\n  { name: 'Sweden', code: 'SE' },\r\n  { name: 'Switzerland', code: 'CH' },\r\n  { name: 'Syrian Arab Republic', code: 'SY' },\r\n  { name: 'Taiwan, Province of China', code: 'TW' },\r\n  { name: 'Tajikistan', code: 'TJ' },\r\n  { name: 'Tanzania, United Republic of', code: 'TZ' },\r\n  { name: 'Thailand', code: 'TH' },\r\n  { name: 'Timor-Leste', code: 'TL' },\r\n  { name: 'Togo', code: 'TG' },\r\n  { name: 'Tokelau', code: 'TK' },\r\n  { name: 'Tonga', code: 'TO' },\r\n  { name: 'Trinidad and Tobago', code: 'TT' },\r\n  { name: 'Tunisia', code: 'TN' },\r\n  { name: 'Turkey', code: 'TR' },\r\n  { name: 'Turkmenistan', code: 'TM' },\r\n  { name: 'Turks and Caicos Islands', code: 'TC' },\r\n  { name: 'Tuvalu', code: 'TV' },\r\n  { name: 'Uganda', code: 'UG' },\r\n  { name: 'Ukraine', code: 'UA' },\r\n  { name: 'United Arab Emirates', code: 'AE' },\r\n  { name: 'United Kingdom', code: 'GB' },\r\n  { name: 'United States', code: 'US' },\r\n  { name: 'United States Minor Outlying Islands', code: 'UM' },\r\n  { name: 'Uruguay', code: 'UY' },\r\n  { name: 'Uzbekistan', code: 'UZ' },\r\n  { name: 'Vanuatu', code: 'VU' },\r\n  { name: 'Venezuela', code: 'VE' },\r\n  { name: 'Viet Nam', code: 'VN' },\r\n  { name: 'Virgin Islands, British', code: 'VG' },\r\n  { name: 'Virgin Islands, U.S.', code: 'VI' },\r\n  { name: 'Wallis and Futuna', code: 'WF' },\r\n  { name: 'Western Sahara', code: 'EH' },\r\n  { name: 'Yemen', code: 'YE' },\r\n  { name: 'Zambia', code: 'ZM' },\r\n  { name: 'Zimbabwe', code: 'ZW' }\r\n]"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCtrl.bind({})"
            },
            {
                "name": "defaultSchema",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: 'Person',\r\n  type: 'object',\r\n  required: [\r\n    'name',\r\n    'age',\r\n    'date',\r\n    'favorite_color',\r\n    'gender',\r\n    'location',\r\n    'pets',\r\n  ],\r\n  properties: {\r\n    name: {\r\n      type: 'string',\r\n      description: 'First and Last name',\r\n      minLength: 4,\r\n      default: 'Jeremy Dorn',\r\n    },\r\n    age: {\r\n      type: 'integer',\r\n      default: 25,\r\n      minimum: 18,\r\n      maximum: 99,\r\n    },\r\n    favorite_color: {\r\n      type: 'string',\r\n      format: 'color',\r\n      title: 'favorite color',\r\n      default: '#ffa500',\r\n    },\r\n    gender: {\r\n      type: 'string',\r\n      enum: ['male', 'female', 'other'],\r\n    },\r\n    date: {\r\n      type: 'string',\r\n      format: 'date',\r\n      options: {\r\n        flatpickr: {},\r\n      },\r\n    },\r\n    location: {\r\n      type: 'object',\r\n      title: 'Location',\r\n      required: ['city', 'state', 'citystate'],\r\n      properties: {\r\n        city: {\r\n          type: 'string',\r\n          default: 'San Francisco',\r\n        },\r\n        state: {\r\n          type: 'string',\r\n          default: 'CA',\r\n        },\r\n        citystate: {\r\n          type: 'string',\r\n          description:\r\n            'This is generated automatically from the previous two fields',\r\n          template: '{{city}}, {{state}}',\r\n          watch: {\r\n            city: 'location.city',\r\n            state: 'location.state',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    pets: {\r\n      type: 'array',\r\n      format: 'table',\r\n      title: 'Pets',\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'object',\r\n        title: 'Pet',\r\n        properties: {\r\n          type: {\r\n            type: 'string',\r\n            enum: ['cat', 'dog', 'bird', 'reptile', 'other'],\r\n            default: 'dog',\r\n          },\r\n          name: {\r\n            type: 'string',\r\n          },\r\n        },\r\n      },\r\n      default: [\r\n        {\r\n          type: 'dog',\r\n          name: 'Walter',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "Event",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Events",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCtrl.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCtrl.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<JSONForm>",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "TemplateCtrl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AutoComplete>",
                "defaultValue": "(args: AutoComplete) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "TextTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "TemplateCtrl.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/Autocomplete/Autocomplete.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  change: action('change'),\r\n  input: action('input'),\r\n\r\n}"
                },
                {
                    "name": "AutoAjax",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCtrl.bind({})"
                },
                {
                    "name": "data",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { name: 'Afghanistan', code: 'AF' },\r\n  { name: 'Åland Islands', code: 'AX' },\r\n  { name: 'Albania', code: 'AL' },\r\n  { name: 'Algeria', code: 'DZ' },\r\n  { name: 'American Samoa', code: 'AS' },\r\n  { name: 'AndorrA', code: 'AD' },\r\n  { name: 'Angola', code: 'AO' },\r\n  { name: 'Anguilla', code: 'AI' },\r\n  { name: 'Antarctica', code: 'AQ' },\r\n  { name: 'Antigua and Barbuda', code: 'AG' },\r\n  { name: 'Argentina', code: 'AR' },\r\n  { name: 'Armenia', code: 'AM' },\r\n  { name: 'Aruba', code: 'AW' },\r\n  { name: 'Australia', code: 'AU' },\r\n  { name: 'Austria', code: 'AT' },\r\n  { name: 'Azerbaijan', code: 'AZ' },\r\n  { name: 'Bahamas', code: 'BS' },\r\n  { name: 'Bahrain', code: 'BH' },\r\n  { name: 'Bangladesh', code: 'BD' },\r\n  { name: 'Barbados', code: 'BB' },\r\n  { name: 'Belarus', code: 'BY' },\r\n  { name: 'Belgium', code: 'BE' },\r\n  { name: 'Belize', code: 'BZ' },\r\n  { name: 'Benin', code: 'BJ' },\r\n  { name: 'Bermuda', code: 'BM' },\r\n  { name: 'Bhutan', code: 'BT' },\r\n  { name: 'Bolivia', code: 'BO' },\r\n  { name: 'Bosnia and Herzegovina', code: 'BA' },\r\n  { name: 'Botswana', code: 'BW' },\r\n  { name: 'Bouvet Island', code: 'BV' },\r\n  { name: 'Brazil', code: 'BR' },\r\n  { name: 'British Indian Ocean Territory', code: 'IO' },\r\n  { name: 'Brunei Darussalam', code: 'BN' },\r\n  { name: 'Bulgaria', code: 'BG' },\r\n  { name: 'Burkina Faso', code: 'BF' },\r\n  { name: 'Burundi', code: 'BI' },\r\n  { name: 'Cambodia', code: 'KH' },\r\n  { name: 'Cameroon', code: 'CM' },\r\n  { name: 'Canada', code: 'CA' },\r\n  { name: 'Cape Verde', code: 'CV' },\r\n  { name: 'Cayman Islands', code: 'KY' },\r\n  { name: 'Central African Republic', code: 'CF' },\r\n  { name: 'Chad', code: 'TD' },\r\n  { name: 'Chile', code: 'CL' },\r\n  { name: 'China', code: 'CN' },\r\n  { name: 'Christmas Island', code: 'CX' },\r\n  { name: 'Cocos (Keeling) Islands', code: 'CC' },\r\n  { name: 'Colombia', code: 'CO' },\r\n  { name: 'Comoros', code: 'KM' },\r\n  { name: 'Congo', code: 'CG' },\r\n  { name: 'Congo, The Democratic Republic of the', code: 'CD' },\r\n  { name: 'Cook Islands', code: 'CK' },\r\n  { name: 'Costa Rica', code: 'CR' },\r\n  { name: 'Cote D\\'Ivoire', code: 'CI' },\r\n  { name: 'Croatia', code: 'HR' },\r\n  { name: 'Cuba', code: 'CU' },\r\n  { name: 'Cyprus', code: 'CY' },\r\n  { name: 'Czech Republic', code: 'CZ' },\r\n  { name: 'Denmark', code: 'DK' },\r\n  { name: 'Djibouti', code: 'DJ' },\r\n  { name: 'Dominica', code: 'DM' },\r\n  { name: 'Dominican Republic', code: 'DO' },\r\n  { name: 'Ecuador', code: 'EC' },\r\n  { name: 'Egypt', code: 'EG' },\r\n  { name: 'El Salvador', code: 'SV' },\r\n  { name: 'Equatorial Guinea', code: 'GQ' },\r\n  { name: 'Eritrea', code: 'ER' },\r\n  { name: 'Estonia', code: 'EE' },\r\n  { name: 'Ethiopia', code: 'ET' },\r\n  { name: 'Falkland Islands (Malvinas)', code: 'FK' },\r\n  { name: 'Faroe Islands', code: 'FO' },\r\n  { name: 'Fiji', code: 'FJ' },\r\n  { name: 'Finland', code: 'FI' },\r\n  { name: 'France', code: 'FR' },\r\n  { name: 'French Guiana', code: 'GF' },\r\n  { name: 'French Polynesia', code: 'PF' },\r\n  { name: 'French Southern Territories', code: 'TF' },\r\n  { name: 'Gabon', code: 'GA' },\r\n  { name: 'Gambia', code: 'GM' },\r\n  { name: 'Georgia', code: 'GE' },\r\n  { name: 'Germany', code: 'DE' },\r\n  { name: 'Ghana', code: 'GH' },\r\n  { name: 'Gibraltar', code: 'GI' },\r\n  { name: 'Greece', code: 'GR' },\r\n  { name: 'Greenland', code: 'GL' },\r\n  { name: 'Grenada', code: 'GD' },\r\n  { name: 'Guadeloupe', code: 'GP' },\r\n  { name: 'Guam', code: 'GU' },\r\n  { name: 'Guatemala', code: 'GT' },\r\n  { name: 'Guernsey', code: 'GG' },\r\n  { name: 'Guinea', code: 'GN' },\r\n  { name: 'Guinea-Bissau', code: 'GW' },\r\n  { name: 'Guyana', code: 'GY' },\r\n  { name: 'Haiti', code: 'HT' },\r\n  { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\r\n  { name: 'Holy See (Vatican City State)', code: 'VA' },\r\n  { name: 'Honduras', code: 'HN' },\r\n  { name: 'Hong Kong', code: 'HK' },\r\n  { name: 'Hungary', code: 'HU' },\r\n  { name: 'Iceland', code: 'IS' },\r\n  { name: 'India', code: 'IN' },\r\n  { name: 'Indonesia', code: 'ID' },\r\n  { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n  { name: 'Iraq', code: 'IQ' },\r\n  { name: 'Ireland', code: 'IE' },\r\n  { name: 'Isle of Man', code: 'IM' },\r\n  { name: 'Israel', code: 'IL' },\r\n  { name: 'Italy', code: 'IT' },\r\n  { name: 'Jamaica', code: 'JM' },\r\n  { name: 'Japan', code: 'JP' },\r\n  { name: 'Jersey', code: 'JE' },\r\n  { name: 'Jordan', code: 'JO' },\r\n  { name: 'Kazakhstan', code: 'KZ' },\r\n  { name: 'Kenya', code: 'KE' },\r\n  { name: 'Kiribati', code: 'KI' },\r\n  { name: 'Korea, Democratic People\\'S Republic of', code: 'KP' },\r\n  { name: 'Korea, Republic of', code: 'KR' },\r\n  { name: 'Kuwait', code: 'KW' },\r\n  { name: 'Kyrgyzstan', code: 'KG' },\r\n  { name: 'Lao People\\'S Democratic Republic', code: 'LA' },\r\n  { name: 'Latvia', code: 'LV' },\r\n  { name: 'Lebanon', code: 'LB' },\r\n  { name: 'Lesotho', code: 'LS' },\r\n  { name: 'Liberia', code: 'LR' },\r\n  { name: 'Libyan Arab Jamahiriya', code: 'LY' },\r\n  { name: 'Liechtenstein', code: 'LI' },\r\n  { name: 'Lithuania', code: 'LT' },\r\n  { name: 'Luxembourg', code: 'LU' },\r\n  { name: 'Macao', code: 'MO' },\r\n  { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' },\r\n  { name: 'Madagascar', code: 'MG' },\r\n  { name: 'Malawi', code: 'MW' },\r\n  { name: 'Malaysia', code: 'MY' },\r\n  { name: 'Maldives', code: 'MV' },\r\n  { name: 'Mali', code: 'ML' },\r\n  { name: 'Malta', code: 'MT' },\r\n  { name: 'Marshall Islands', code: 'MH' },\r\n  { name: 'Martinique', code: 'MQ' },\r\n  { name: 'Mauritania', code: 'MR' },\r\n  { name: 'Mauritius', code: 'MU' },\r\n  { name: 'Mayotte', code: 'YT' },\r\n  { name: 'Mexico', code: 'MX' },\r\n  { name: 'Micronesia, Federated States of', code: 'FM' },\r\n  { name: 'Moldova, Republic of', code: 'MD' },\r\n  { name: 'Monaco', code: 'MC' },\r\n  { name: 'Mongolia', code: 'MN' },\r\n  { name: 'Montserrat', code: 'MS' },\r\n  { name: 'Morocco', code: 'MA' },\r\n  { name: 'Mozambique', code: 'MZ' },\r\n  { name: 'Myanmar', code: 'MM' },\r\n  { name: 'Namibia', code: 'NA' },\r\n  { name: 'Nauru', code: 'NR' },\r\n  { name: 'Nepal', code: 'NP' },\r\n  { name: 'Netherlands', code: 'NL' },\r\n  { name: 'Netherlands Antilles', code: 'AN' },\r\n  { name: 'New Caledonia', code: 'NC' },\r\n  { name: 'New Zealand', code: 'NZ' },\r\n  { name: 'Nicaragua', code: 'NI' },\r\n  { name: 'Niger', code: 'NE' },\r\n  { name: 'Nigeria', code: 'NG' },\r\n  { name: 'Niue', code: 'NU' },\r\n  { name: 'Norfolk Island', code: 'NF' },\r\n  { name: 'Northern Mariana Islands', code: 'MP' },\r\n  { name: 'Norway', code: 'NO' },\r\n  { name: 'Oman', code: 'OM' },\r\n  { name: 'Pakistan', code: 'PK' },\r\n  { name: 'Palau', code: 'PW' },\r\n  { name: 'Palestinian Territory, Occupied', code: 'PS' },\r\n  { name: 'Panama', code: 'PA' },\r\n  { name: 'Papua New Guinea', code: 'PG' },\r\n  { name: 'Paraguay', code: 'PY' },\r\n  { name: 'Peru', code: 'PE' },\r\n  { name: 'Philippines', code: 'PH' },\r\n  { name: 'Pitcairn', code: 'PN' },\r\n  { name: 'Poland', code: 'PL' },\r\n  { name: 'Portugal', code: 'PT' },\r\n  { name: 'Puerto Rico', code: 'PR' },\r\n  { name: 'Qatar', code: 'QA' },\r\n  { name: 'Reunion', code: 'RE' },\r\n  { name: 'Romania', code: 'RO' },\r\n  { name: 'Russian Federation', code: 'RU' },\r\n  { name: 'RWANDA', code: 'RW' },\r\n  { name: 'Saint Helena', code: 'SH' },\r\n  { name: 'Saint Kitts and Nevis', code: 'KN' },\r\n  { name: 'Saint Lucia', code: 'LC' },\r\n  { name: 'Saint Pierre and Miquelon', code: 'PM' },\r\n  { name: 'Saint Vincent and the Grenadines', code: 'VC' },\r\n  { name: 'Samoa', code: 'WS' },\r\n  { name: 'San Marino', code: 'SM' },\r\n  { name: 'Sao Tome and Principe', code: 'ST' },\r\n  { name: 'Saudi Arabia', code: 'SA' },\r\n  { name: 'Senegal', code: 'SN' },\r\n  { name: 'Serbia and Montenegro', code: 'CS' },\r\n  { name: 'Seychelles', code: 'SC' },\r\n  { name: 'Sierra Leone', code: 'SL' },\r\n  { name: 'Singapore', code: 'SG' },\r\n  { name: 'Slovakia', code: 'SK' },\r\n  { name: 'Slovenia', code: 'SI' },\r\n  { name: 'Solomon Islands', code: 'SB' },\r\n  { name: 'Somalia', code: 'SO' },\r\n  { name: 'South Africa', code: 'ZA' },\r\n  { name: 'South Georgia and the South Sandwich Islands', code: 'GS' },\r\n  { name: 'Spain', code: 'ES' },\r\n  { name: 'Sri Lanka', code: 'LK' },\r\n  { name: 'Sudan', code: 'SD' },\r\n  { name: 'Suriname', code: 'SR' },\r\n  { name: 'Svalbard and Jan Mayen', code: 'SJ' },\r\n  { name: 'Swaziland', code: 'SZ' },\r\n  { name: 'Sweden', code: 'SE' },\r\n  { name: 'Switzerland', code: 'CH' },\r\n  { name: 'Syrian Arab Republic', code: 'SY' },\r\n  { name: 'Taiwan, Province of China', code: 'TW' },\r\n  { name: 'Tajikistan', code: 'TJ' },\r\n  { name: 'Tanzania, United Republic of', code: 'TZ' },\r\n  { name: 'Thailand', code: 'TH' },\r\n  { name: 'Timor-Leste', code: 'TL' },\r\n  { name: 'Togo', code: 'TG' },\r\n  { name: 'Tokelau', code: 'TK' },\r\n  { name: 'Tonga', code: 'TO' },\r\n  { name: 'Trinidad and Tobago', code: 'TT' },\r\n  { name: 'Tunisia', code: 'TN' },\r\n  { name: 'Turkey', code: 'TR' },\r\n  { name: 'Turkmenistan', code: 'TM' },\r\n  { name: 'Turks and Caicos Islands', code: 'TC' },\r\n  { name: 'Tuvalu', code: 'TV' },\r\n  { name: 'Uganda', code: 'UG' },\r\n  { name: 'Ukraine', code: 'UA' },\r\n  { name: 'United Arab Emirates', code: 'AE' },\r\n  { name: 'United Kingdom', code: 'GB' },\r\n  { name: 'United States', code: 'US' },\r\n  { name: 'United States Minor Outlying Islands', code: 'UM' },\r\n  { name: 'Uruguay', code: 'UY' },\r\n  { name: 'Uzbekistan', code: 'UZ' },\r\n  { name: 'Vanuatu', code: 'VU' },\r\n  { name: 'Venezuela', code: 'VE' },\r\n  { name: 'Viet Nam', code: 'VN' },\r\n  { name: 'Virgin Islands, British', code: 'VG' },\r\n  { name: 'Virgin Islands, U.S.', code: 'VI' },\r\n  { name: 'Wallis and Futuna', code: 'WF' },\r\n  { name: 'Western Sahara', code: 'EH' },\r\n  { name: 'Yemen', code: 'YE' },\r\n  { name: 'Zambia', code: 'ZM' },\r\n  { name: 'Zimbabwe', code: 'ZW' }\r\n]"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCtrl.bind({})"
                },
                {
                    "name": "Events",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCtrl.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCtrl.bind({})"
                },
                {
                    "name": "TemplateCtrl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AutoComplete>",
                    "defaultValue": "(args: AutoComplete) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "TextTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "TemplateCtrl.bind({})"
                }
            ],
            "src/stories/JSONForm/JSONForm.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onChange: action('onChange'),\r\n}"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultSchema",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: 'Person',\r\n  type: 'object',\r\n  required: [\r\n    'name',\r\n    'age',\r\n    'date',\r\n    'favorite_color',\r\n    'gender',\r\n    'location',\r\n    'pets',\r\n  ],\r\n  properties: {\r\n    name: {\r\n      type: 'string',\r\n      description: 'First and Last name',\r\n      minLength: 4,\r\n      default: 'Jeremy Dorn',\r\n    },\r\n    age: {\r\n      type: 'integer',\r\n      default: 25,\r\n      minimum: 18,\r\n      maximum: 99,\r\n    },\r\n    favorite_color: {\r\n      type: 'string',\r\n      format: 'color',\r\n      title: 'favorite color',\r\n      default: '#ffa500',\r\n    },\r\n    gender: {\r\n      type: 'string',\r\n      enum: ['male', 'female', 'other'],\r\n    },\r\n    date: {\r\n      type: 'string',\r\n      format: 'date',\r\n      options: {\r\n        flatpickr: {},\r\n      },\r\n    },\r\n    location: {\r\n      type: 'object',\r\n      title: 'Location',\r\n      required: ['city', 'state', 'citystate'],\r\n      properties: {\r\n        city: {\r\n          type: 'string',\r\n          default: 'San Francisco',\r\n        },\r\n        state: {\r\n          type: 'string',\r\n          default: 'CA',\r\n        },\r\n        citystate: {\r\n          type: 'string',\r\n          description:\r\n            'This is generated automatically from the previous two fields',\r\n          template: '{{city}}, {{state}}',\r\n          watch: {\r\n            city: 'location.city',\r\n            state: 'location.state',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    pets: {\r\n      type: 'array',\r\n      format: 'table',\r\n      title: 'Pets',\r\n      uniqueItems: true,\r\n      items: {\r\n        type: 'object',\r\n        title: 'Pet',\r\n        properties: {\r\n          type: {\r\n            type: 'string',\r\n            enum: ['cat', 'dog', 'bird', 'reptile', 'other'],\r\n            default: 'dog',\r\n          },\r\n          name: {\r\n            type: 'string',\r\n          },\r\n        },\r\n      },\r\n      default: [\r\n        {\r\n          type: 'dog',\r\n          name: 'Walter',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Event",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<JSONForm>",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutoComplete",
                "coveragePercent": 0,
                "coverageCount": "0/22",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AutoAjax",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "data",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Events",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TemplateCtrl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "JSONForm",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Window",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultSchema",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Event",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/docUtils.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DocUtils",
                "coveragePercent": 50,
                "coverageCount": "2/4",
                "status": "medium"
            }
        ]
    }
}