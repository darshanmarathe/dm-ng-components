{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "Window",
            "id": "interface-Window-97b829dfeb3f9cf60510b5f65c450d374a46607850bf394b46937e3c916c6d82a9b190027db9b4d3b94fcece6bec5ccd63bc0d821fcba041a51b6c143790f181",
            "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Component, ViewChild, ElementRef, AfterViewInit, Renderer2, Input, Inject, OnInit } from '@angular/core';\r\nimport { DocUtils } from '../docUtils';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    JSONEditor: any;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dm-autocomplete',\r\n  templateUrl: 'Autocomplete.component.html',\r\n  styleUrls: ['Autocomplete.component.css']\r\n})\r\n\r\nexport class AutoComplete implements AfterViewInit, OnInit {\r\n\r\n  @ViewChild('jsonform') jsonform: ElementRef<HTMLInputElement>;\r\n  @Output()\r\n  change = new EventEmitter<Event>()\r\n  jsonEditor: any = undefined;\r\n\r\n\r\n  constructor(private renderer: Renderer2,\r\n    @Inject(DOCUMENT) private document: Document) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  LoadExternerDeps() {\r\n    const doc = new DocUtils(this.document);\r\n    doc.loadJsScript(this.renderer, \"https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js\");\r\n    doc.loadCss(this.renderer, \"https://use.fontawesome.com/releases/v5.6.1/css/all.css\");\r\n    doc.loadCss(this.renderer, \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css\")\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "JSONEditor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Window",
            "id": "interface-Window-6435ce5f1394269f7a6b4e30a0b763f37dfc8eef06c630652c1bdb2ca73c1a1bb946e549696e598958686145194e5f71c30991a02662e2f953721b02308f84d9-1",
            "file": "src/stories/JSONForm/JSONForm.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Component, ViewChild, ElementRef, AfterViewInit, Renderer2, Input, Inject, OnInit } from '@angular/core';\r\nimport { DocUtils } from '../docUtils';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    JSONEditor: any;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dm-json-form',\r\n  templateUrl: 'JSONForm.component.html',\r\n  styleUrls: ['JSONForm.component.css']\r\n})\r\n\r\nexport class JSONForm implements AfterViewInit, OnInit {\r\n\r\n  @ViewChild('jsonform') jsonform: ElementRef<HTMLInputElement>;\r\n  @Output()\r\n  change = new EventEmitter<Event>()\r\n  jsonEditor: any = undefined;\r\n\r\n  @Input()\r\n  schema: any = {}\r\n\r\n  @Input()\r\n  data: any = {}\r\n\r\n\r\n  @Input()\r\n  enabled: boolean = true\r\n\r\n  @Input()\r\n  title: string = 'JSON Form Component From Darshan'\r\n\r\n  private editorOptions = {\r\n    iconlib: \"fontawesome5\",\r\n    object_layout: \"normal\",\r\n    schema: this.schema || {},\r\n    show_errors: \"interaction\",\r\n    theme: \"bootstrap4\",\r\n\r\n    startval: this.data || {},\r\n  };\r\n\r\n  inter: NodeJS.Timer;\r\n\r\n\r\n  constructor(private renderer: Renderer2,\r\n    @Inject(DOCUMENT) private document: Document) {\r\n    this.setUpEditor.bind(this);\r\n    this.initJsoneditor.bind(this);\r\n    this.validate.bind(this)\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  setUpEditor() {\r\n    if (this.jsonEditor) {\r\n      this.jsonEditor.destroy();\r\n    }\r\n\r\n    this.editorOptions.schema = this.schema;\r\n\r\n    this.editorOptions.startval = this.data;\r\n\r\n    this.jsonEditor = new window.JSONEditor(\r\n      this.jsonform.nativeElement,\r\n      this.editorOptions\r\n    );\r\n    console.log(\"Inside SetupEditor\", this.jsonEditor)\r\n    this.jsonEditor.on(\"change\", () => {\r\n      if (this.validate()) {\r\n        const value = this.jsonEditor.getValue();\r\n        console.warn(value, \"value\")\r\n\r\n        this.change.emit(value);\r\n      }\r\n\r\n    });\r\n    this.jsonEditor.on(\"ready\", () => {\r\n      // Now the api methods will be available\r\n\r\n      if (this.enabled !== true) {\r\n        this.jsonEditor.disable();\r\n      }\r\n    });\r\n    console.log(this.jsonEditor)\r\n  }\r\n\r\n  validate() {\r\n    const errors = this.jsonEditor.validate();\r\n\r\n    return errors.length === 0;\r\n  }\r\n\r\n  initJsoneditor() {\r\n    // destroy old JSONEditor instance if exists\r\n\r\n\r\n    if (window.JSONEditor) {\r\n      this.setUpEditor();\r\n    } else {\r\n\r\n      this.inter = setInterval(() => {\r\n        console.warn(window.JSONEditor)\r\n\r\n        if (window.JSONEditor && typeof this.editorOptions !== 'string') {\r\n          clearInterval(this.inter);\r\n          this.setUpEditor();\r\n        }\r\n      }, 3000);\r\n    }\r\n    // new instance of JSONEditor\r\n\r\n    // listen for changes\r\n  };\r\n\r\n\r\n\r\n  LoadExternerDeps() {\r\n    const doc = new DocUtils(this.document);\r\n    doc.loadJsScript(this.renderer, \"https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js\");\r\n    doc.loadCss(this.renderer, \"https://use.fontawesome.com/releases/v5.6.1/css/all.css\");\r\n    doc.loadCss(this.renderer, \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css\")\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n\r\n    if (this.jsonform !== undefined) {\r\n\r\n      this.LoadExternerDeps()\r\n      this.initJsoneditor();\r\n\r\n    }\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "JSONEditor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "Window-1"
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DocUtils",
            "id": "class-DocUtils-8f087a121d2db8592fa9c48f600d2250903a61ada83e81f294681ea7dae683002b0a717bf8fe6a2407fd35befde59d1f6defd4b4e99241bcc32a59ae23eebf8b",
            "file": "src/stories/docUtils.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Renderer2 } from \"@angular/core\";\r\n\r\n\r\nexport class DocUtils  {\r\n\r\n  constructor(private document:any){}\r\n    /**\r\n* Append the JS tag to the Document Body.\r\n* @param renderer The Angular Renderer\r\n* @param src The path to the script\r\n* @returns the script element\r\n*/\r\npublic loadJsScript(renderer: Renderer2, src: string): HTMLScriptElement {\r\n  const script = renderer.createElement('script');\r\n  script.type = 'text/javascript';\r\n  script.src = src;\r\n  renderer.appendChild(this.document.body, script);\r\n  return script;\r\n}\r\n\r\n/**\r\n* Append the JS tag to the Document Body.\r\n* @param renderer The Angular Renderer\r\n* @param src The path to the script\r\n* @returns the script element\r\n*/\r\n public loadCss(renderer: Renderer2, href: string): HTMLLinkElement {\r\n  const link = renderer.createElement('link');\r\n  link.rel = 'stylesheet';\r\n  link.src = href;\r\n  renderer.appendChild(this.document.body, link);\r\n  return link;\r\n}\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "document",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "document",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "loadCss",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "Renderer2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "href",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HTMLLinkElement",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAppend the JS tag to the Document Body.\n",
                    "description": "<p>Append the JS tag to the Document Body.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 597,
                                "end": 605,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "renderer"
                            },
                            "type": "Renderer2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 591,
                                "end": 596,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The Angular Renderer</p>\n"
                        },
                        {
                            "name": "href",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 668,
                                "end": 675,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the script element</p>\n"
                        }
                    ]
                },
                {
                    "name": "loadJsScript",
                    "args": [
                        {
                            "name": "renderer",
                            "type": "Renderer2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "src",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HTMLScriptElement",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAppend the JS tag to the Document Body.\n",
                    "description": "<p>Append the JS tag to the Document Body.</p>\n",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 176,
                                "end": 184,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "renderer"
                            },
                            "type": "Renderer2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 170,
                                "end": 175,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The Angular Renderer</p>\n"
                        },
                        {
                            "name": {
                                "pos": 216,
                                "end": 219,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "src"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 210,
                                "end": 215,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The path to the script</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 247,
                                "end": 254,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>the script element</p>\n"
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-b0fa98266b134d340eff7840e51282c0c4024b0de916d9d4b23a57ca55823332e7b357792b3e1d1cde783a9e41c93aeb6a776acbd49eec6c209a574c5bce7b07",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "defaultSchema",
                    "defaultValue": "{\r\n    title: \"Person\",\r\n    type: \"object\",\r\n    required: [\r\n      \"name\",\r\n      \"age\",\r\n      \"date\",\r\n      \"favorite_color\",\r\n      \"gender\",\r\n      \"location\",\r\n      \"pets\",\r\n    ],\r\n    properties: {\r\n      name: {\r\n        type: \"string\",\r\n        description: \"First and Last name\",\r\n        minLength: 4,\r\n        default: \"Jeremy Dorn\",\r\n      },\r\n      age: {\r\n        type: \"integer\",\r\n        default: 25,\r\n        minimum: 18,\r\n        maximum: 99,\r\n      },\r\n      favorite_color: {\r\n        type: \"string\",\r\n        format: \"color\",\r\n        title: \"favorite color\",\r\n        default: \"#ffa500\",\r\n      },\r\n      gender: {\r\n        type: \"string\",\r\n        enum: [\"male\", \"female\", \"other\"],\r\n      },\r\n      date: {\r\n        type: \"string\",\r\n        format: \"date\",\r\n        options: {\r\n          flatpickr: {},\r\n        },\r\n      },\r\n      location: {\r\n        type: \"object\",\r\n        title: \"Location\",\r\n        required: [\"city\", \"state\", \"citystate\"],\r\n        properties: {\r\n          city: {\r\n            type: \"string\",\r\n            default: \"San Francisco\",\r\n          },\r\n          state: {\r\n            type: \"string\",\r\n            default: \"CA\",\r\n          },\r\n          citystate: {\r\n            type: \"string\",\r\n            description:\r\n              \"This is generated automatically from the previous two fields\",\r\n            template: \"{{city}}, {{state}}\",\r\n            watch: {\r\n              city: \"location.city\",\r\n              state: \"location.state\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      pets: {\r\n        type: \"array\",\r\n        format: \"table\",\r\n        title: \"Pets\",\r\n        uniqueItems: true,\r\n        items: {\r\n          type: \"object\",\r\n          title: \"Pet\",\r\n          properties: {\r\n            type: {\r\n              type: \"string\",\r\n              enum: [\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"],\r\n              default: \"dog\",\r\n            },\r\n            name: {\r\n              type: \"string\",\r\n            },\r\n          },\r\n        },\r\n        default: [\r\n          {\r\n            type: \"dog\",\r\n            name: \"Walter\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "item",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "title",
                    "defaultValue": "'dm-ng-components'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [
                {
                    "name": "ShowItem",
                    "args": [
                        {
                            "name": "_item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 109,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "_item",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'dm-ng-components';\r\n\r\n   defaultSchema = {\r\n    title: \"Person\",\r\n    type: \"object\",\r\n    required: [\r\n      \"name\",\r\n      \"age\",\r\n      \"date\",\r\n      \"favorite_color\",\r\n      \"gender\",\r\n      \"location\",\r\n      \"pets\",\r\n    ],\r\n    properties: {\r\n      name: {\r\n        type: \"string\",\r\n        description: \"First and Last name\",\r\n        minLength: 4,\r\n        default: \"Jeremy Dorn\",\r\n      },\r\n      age: {\r\n        type: \"integer\",\r\n        default: 25,\r\n        minimum: 18,\r\n        maximum: 99,\r\n      },\r\n      favorite_color: {\r\n        type: \"string\",\r\n        format: \"color\",\r\n        title: \"favorite color\",\r\n        default: \"#ffa500\",\r\n      },\r\n      gender: {\r\n        type: \"string\",\r\n        enum: [\"male\", \"female\", \"other\"],\r\n      },\r\n      date: {\r\n        type: \"string\",\r\n        format: \"date\",\r\n        options: {\r\n          flatpickr: {},\r\n        },\r\n      },\r\n      location: {\r\n        type: \"object\",\r\n        title: \"Location\",\r\n        required: [\"city\", \"state\", \"citystate\"],\r\n        properties: {\r\n          city: {\r\n            type: \"string\",\r\n            default: \"San Francisco\",\r\n          },\r\n          state: {\r\n            type: \"string\",\r\n            default: \"CA\",\r\n          },\r\n          citystate: {\r\n            type: \"string\",\r\n            description:\r\n              \"This is generated automatically from the previous two fields\",\r\n            template: \"{{city}}, {{state}}\",\r\n            watch: {\r\n              city: \"location.city\",\r\n              state: \"location.state\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      pets: {\r\n        type: \"array\",\r\n        format: \"table\",\r\n        title: \"Pets\",\r\n        uniqueItems: true,\r\n        items: {\r\n          type: \"object\",\r\n          title: \"Pet\",\r\n          properties: {\r\n            type: {\r\n              type: \"string\",\r\n              enum: [\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"],\r\n              default: \"dog\",\r\n            },\r\n            name: {\r\n              type: \"string\",\r\n            },\r\n          },\r\n        },\r\n        default: [\r\n          {\r\n            type: \"dog\",\r\n            name: \"Walter\",\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  item = {}\r\n\r\n  ShowItem(_item:any){\r\n    console.warn('Hello.....' ,_item)\r\n    this.item = _item;\r\n    console.log(this.item);\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<h2>Hello Trial </h2>\r\n{{item | json}}\r\n<dm-json-form title=\"Hello world\" (change)=\"ShowItem($event)\" [schema]=\"defaultSchema\" [data]=\"item\">  </dm-json-form>\r\n"
        },
        {
            "name": "AutoComplete",
            "id": "component-AutoComplete-97b829dfeb3f9cf60510b5f65c450d374a46607850bf394b46937e3c916c6d82a9b190027db9b4d3b94fcece6bec5ccd63bc0d821fcba041a51b6c143790f181",
            "file": "src/stories/Autocomplete/Autocomplete.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dm-autocomplete",
            "styleUrls": [
                "Autocomplete.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "Autocomplete.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "jsonEditor",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "jsonform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'jsonform'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "LoadExternerDeps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Component, ViewChild, ElementRef, AfterViewInit, Renderer2, Input, Inject, OnInit } from '@angular/core';\r\nimport { DocUtils } from '../docUtils';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    JSONEditor: any;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dm-autocomplete',\r\n  templateUrl: 'Autocomplete.component.html',\r\n  styleUrls: ['Autocomplete.component.css']\r\n})\r\n\r\nexport class AutoComplete implements AfterViewInit, OnInit {\r\n\r\n  @ViewChild('jsonform') jsonform: ElementRef<HTMLInputElement>;\r\n  @Output()\r\n  change = new EventEmitter<Event>()\r\n  jsonEditor: any = undefined;\r\n\r\n\r\n  constructor(private renderer: Renderer2,\r\n    @Inject(DOCUMENT) private document: Document) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  LoadExternerDeps() {\r\n    const doc = new DocUtils(this.document);\r\n    doc.loadJsScript(this.renderer, \"https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js\");\r\n    doc.loadCss(this.renderer, \"https://use.fontawesome.com/releases/v5.6.1/css/all.css\");\r\n    doc.loadCss(this.renderer, \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css\")\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "Autocomplete.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "templateData": "<div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8ceaf520f96e5437b08eeda244d84efb29effe62ddca4fc38eaa229085c2a1126c5715e61445bae741505aca1e4d377b350cb05fadd1dc45d9b2bbf7527029f1",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-bda17aa3451a9f731685153f2587877b8267c32007f05e7abad3581336e6bc02346a1b660e8c69c4d90b4526b6e047b3ac1f4246252c9dc83985c9148aab5e97",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <div *ngIf=\"user\">\r\n          <span class=\"welcome\">\r\n            Welcome, <b>{{ user.name }}</b\r\n            >!\r\n          </span>\r\n          <storybook-button\r\n            *ngIf=\"user\"\r\n            size=\"small\"\r\n            (onClick)=\"onLogout.emit($event)\"\r\n            label=\"Log out\"\r\n          ></storybook-button>\r\n        </div>\r\n        <div *ngIf=\"!user\">\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            size=\"small\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onLogin.emit($event)\"\r\n            label=\"Log in\"\r\n          ></storybook-button>\r\n          <storybook-button\r\n            *ngIf=\"!user\"\r\n            primary\r\n            size=\"small\"\r\n            primary=\"true\"\r\n            class=\"margin-left\"\r\n            (onClick)=\"onCreateAccount.emit($event)\"\r\n            label=\"Sign up\"\r\n          ></storybook-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: User | null = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 10px;\r\n}\r\n\r\n.welcome {\r\n  color: #333;\r\n  font-size: 14px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "JSONForm",
            "id": "component-JSONForm-6435ce5f1394269f7a6b4e30a0b763f37dfc8eef06c630652c1bdb2ca73c1a1bb946e549696e598958686145194e5f71c30991a02662e2f953721b02308f84d9",
            "file": "src/stories/JSONForm/JSONForm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dm-json-form",
            "styleUrls": [
                "JSONForm.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "JSONForm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "data",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "enabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "schema",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "'JSON Form Component From Darshan'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "change",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "editorOptions",
                    "defaultValue": "{\r\n    iconlib: \"fontawesome5\",\r\n    object_layout: \"normal\",\r\n    schema: this.schema || {},\r\n    show_errors: \"interaction\",\r\n    theme: \"bootstrap4\",\r\n\r\n    startval: this.data || {},\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "inter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NodeJS.Timer",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "jsonEditor",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "jsonform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'jsonform'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "initJsoneditor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "LoadExternerDeps",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 128,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 135,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUpEditor",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { Output, EventEmitter } from '@angular/core';\r\nimport { Component, ViewChild, ElementRef, AfterViewInit, Renderer2, Input, Inject, OnInit } from '@angular/core';\r\nimport { DocUtils } from '../docUtils';\r\n\r\n\r\ndeclare global {\r\n  interface Window {\r\n    JSONEditor: any;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'dm-json-form',\r\n  templateUrl: 'JSONForm.component.html',\r\n  styleUrls: ['JSONForm.component.css']\r\n})\r\n\r\nexport class JSONForm implements AfterViewInit, OnInit {\r\n\r\n  @ViewChild('jsonform') jsonform: ElementRef<HTMLInputElement>;\r\n  @Output()\r\n  change = new EventEmitter<Event>()\r\n  jsonEditor: any = undefined;\r\n\r\n  @Input()\r\n  schema: any = {}\r\n\r\n  @Input()\r\n  data: any = {}\r\n\r\n\r\n  @Input()\r\n  enabled: boolean = true\r\n\r\n  @Input()\r\n  title: string = 'JSON Form Component From Darshan'\r\n\r\n  private editorOptions = {\r\n    iconlib: \"fontawesome5\",\r\n    object_layout: \"normal\",\r\n    schema: this.schema || {},\r\n    show_errors: \"interaction\",\r\n    theme: \"bootstrap4\",\r\n\r\n    startval: this.data || {},\r\n  };\r\n\r\n  inter: NodeJS.Timer;\r\n\r\n\r\n  constructor(private renderer: Renderer2,\r\n    @Inject(DOCUMENT) private document: Document) {\r\n    this.setUpEditor.bind(this);\r\n    this.initJsoneditor.bind(this);\r\n    this.validate.bind(this)\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n  setUpEditor() {\r\n    if (this.jsonEditor) {\r\n      this.jsonEditor.destroy();\r\n    }\r\n\r\n    this.editorOptions.schema = this.schema;\r\n\r\n    this.editorOptions.startval = this.data;\r\n\r\n    this.jsonEditor = new window.JSONEditor(\r\n      this.jsonform.nativeElement,\r\n      this.editorOptions\r\n    );\r\n    console.log(\"Inside SetupEditor\", this.jsonEditor)\r\n    this.jsonEditor.on(\"change\", () => {\r\n      if (this.validate()) {\r\n        const value = this.jsonEditor.getValue();\r\n        console.warn(value, \"value\")\r\n\r\n        this.change.emit(value);\r\n      }\r\n\r\n    });\r\n    this.jsonEditor.on(\"ready\", () => {\r\n      // Now the api methods will be available\r\n\r\n      if (this.enabled !== true) {\r\n        this.jsonEditor.disable();\r\n      }\r\n    });\r\n    console.log(this.jsonEditor)\r\n  }\r\n\r\n  validate() {\r\n    const errors = this.jsonEditor.validate();\r\n\r\n    return errors.length === 0;\r\n  }\r\n\r\n  initJsoneditor() {\r\n    // destroy old JSONEditor instance if exists\r\n\r\n\r\n    if (window.JSONEditor) {\r\n      this.setUpEditor();\r\n    } else {\r\n\r\n      this.inter = setInterval(() => {\r\n        console.warn(window.JSONEditor)\r\n\r\n        if (window.JSONEditor && typeof this.editorOptions !== 'string') {\r\n          clearInterval(this.inter);\r\n          this.setUpEditor();\r\n        }\r\n      }, 3000);\r\n    }\r\n    // new instance of JSONEditor\r\n\r\n    // listen for changes\r\n  };\r\n\r\n\r\n\r\n  LoadExternerDeps() {\r\n    const doc = new DocUtils(this.document);\r\n    doc.loadJsScript(this.renderer, \"https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js\");\r\n    doc.loadCss(this.renderer, \"https://use.fontawesome.com/releases/v5.6.1/css/all.css\");\r\n    doc.loadCss(this.renderer, \"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css\")\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n\r\n\r\n    if (this.jsonform !== undefined) {\r\n\r\n      this.LoadExternerDeps()\r\n      this.initJsoneditor();\r\n\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "JSONForm.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "document",
                        "type": "Document",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit",
                "OnInit"
            ],
            "templateData": "<link href=\"https://use.fontawesome.com/releases/v5.6.1/css/all.css\" rel=\"stylesheet\" />\r\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n\r\n<script src=\"https://cdn.jsdelivr.net/npm/@json-editor/json-editor@latest/dist/jsoneditor.min.js\"></script>\r\n\r\n{{title}}\r\n<div id=\"jsonform\" #jsonform>\r\n\r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-1fc7c24c98b4f0b0f413d91f5a6126f11ad55647457f5a7f372b7f83fe8ecd6dbe67b5ca4b826ed20b9bfbc04d5606b15f82a203b1311f98b18bd28ec9f4fc7c",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { User } from './User';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"doLogout()\"\r\n      (onLogin)=\"doLogin()\"\r\n      (onCreateAccount)=\"doCreateAccount()\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\nexport default class PageComponent {\r\n  user: User | null = null;\r\n\r\n  doLogout() {\r\n    this.user = null;\r\n  }\r\n\r\n  doLogin() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n\r\n  doCreateAccount() {\r\n    this.user = { name: 'Jane Doe' };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nsection h2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nsection p {\r\n  margin: 1em 0;\r\n}\r\n\r\nsection a {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nsection ul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nsection li {\r\n  margin-bottom: 8px;\r\n}\r\n\r\nsection .tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\nsection .tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\nsection .tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\nsection .tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-6d1c6cf917790166e3e44af94b3f9158913b094b6a1bf38d6897bd419cdd9bb9bf2f168185828a820fc90a56d9765816d63293e901c8f141be4639ffc8be9a43",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {JSONForm} from '../stories/JSONForm/JSONForm.component'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    JSONForm\r\n  ],\r\n  imports: [\r\n    BrowserModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "JSONForm"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  onChange: action('onChange'),\r\n\r\n}"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "defaultSchema",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  title: \"Person\",\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"age\",\r\n    \"date\",\r\n    \"favorite_color\",\r\n    \"gender\",\r\n    \"location\",\r\n    \"pets\",\r\n  ],\r\n  properties: {\r\n    name: {\r\n      type: \"string\",\r\n      description: \"First and Last name\",\r\n      minLength: 4,\r\n      default: \"Jeremy Dorn\",\r\n    },\r\n    age: {\r\n      type: \"integer\",\r\n      default: 25,\r\n      minimum: 18,\r\n      maximum: 99,\r\n    },\r\n    favorite_color: {\r\n      type: \"string\",\r\n      format: \"color\",\r\n      title: \"favorite color\",\r\n      default: \"#ffa500\",\r\n    },\r\n    gender: {\r\n      type: \"string\",\r\n      enum: [\"male\", \"female\", \"other\"],\r\n    },\r\n    date: {\r\n      type: \"string\",\r\n      format: \"date\",\r\n      options: {\r\n        flatpickr: {},\r\n      },\r\n    },\r\n    location: {\r\n      type: \"object\",\r\n      title: \"Location\",\r\n      required: [\"city\", \"state\", \"citystate\"],\r\n      properties: {\r\n        city: {\r\n          type: \"string\",\r\n          default: \"San Francisco\",\r\n        },\r\n        state: {\r\n          type: \"string\",\r\n          default: \"CA\",\r\n        },\r\n        citystate: {\r\n          type: \"string\",\r\n          description:\r\n            \"This is generated automatically from the previous two fields\",\r\n          template: \"{{city}}, {{state}}\",\r\n          watch: {\r\n            city: \"location.city\",\r\n            state: \"location.state\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    pets: {\r\n      type: \"array\",\r\n      format: \"table\",\r\n      title: \"Pets\",\r\n      uniqueItems: true,\r\n      items: {\r\n        type: \"object\",\r\n        title: \"Pet\",\r\n        properties: {\r\n          type: {\r\n            type: \"string\",\r\n            enum: [\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"],\r\n            default: \"dog\",\r\n          },\r\n          name: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n      },\r\n      default: [\r\n        {\r\n          type: \"dog\",\r\n          name: \"Walter\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "Event",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/JSONForm/JSONForm.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<JSONForm>",
                "defaultValue": "(args: JSONForm) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/JSONForm/JSONForm.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  onChange: action('onChange'),\r\n\r\n}"
                },
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultSchema",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  title: \"Person\",\r\n  type: \"object\",\r\n  required: [\r\n    \"name\",\r\n    \"age\",\r\n    \"date\",\r\n    \"favorite_color\",\r\n    \"gender\",\r\n    \"location\",\r\n    \"pets\",\r\n  ],\r\n  properties: {\r\n    name: {\r\n      type: \"string\",\r\n      description: \"First and Last name\",\r\n      minLength: 4,\r\n      default: \"Jeremy Dorn\",\r\n    },\r\n    age: {\r\n      type: \"integer\",\r\n      default: 25,\r\n      minimum: 18,\r\n      maximum: 99,\r\n    },\r\n    favorite_color: {\r\n      type: \"string\",\r\n      format: \"color\",\r\n      title: \"favorite color\",\r\n      default: \"#ffa500\",\r\n    },\r\n    gender: {\r\n      type: \"string\",\r\n      enum: [\"male\", \"female\", \"other\"],\r\n    },\r\n    date: {\r\n      type: \"string\",\r\n      format: \"date\",\r\n      options: {\r\n        flatpickr: {},\r\n      },\r\n    },\r\n    location: {\r\n      type: \"object\",\r\n      title: \"Location\",\r\n      required: [\"city\", \"state\", \"citystate\"],\r\n      properties: {\r\n        city: {\r\n          type: \"string\",\r\n          default: \"San Francisco\",\r\n        },\r\n        state: {\r\n          type: \"string\",\r\n          default: \"CA\",\r\n        },\r\n        citystate: {\r\n          type: \"string\",\r\n          description:\r\n            \"This is generated automatically from the previous two fields\",\r\n          template: \"{{city}}, {{state}}\",\r\n          watch: {\r\n            city: \"location.city\",\r\n            state: \"location.state\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    pets: {\r\n      type: \"array\",\r\n      format: \"table\",\r\n      title: \"Pets\",\r\n      uniqueItems: true,\r\n      items: {\r\n        type: \"object\",\r\n        title: \"Pet\",\r\n        properties: {\r\n          type: {\r\n            type: \"string\",\r\n            enum: [\"cat\", \"dog\", \"bird\", \"reptile\", \"other\"],\r\n            default: \"dog\",\r\n          },\r\n          name: {\r\n            type: \"string\",\r\n          },\r\n        },\r\n      },\r\n      default: [\r\n        {\r\n          type: \"dog\",\r\n          name: \"Walter\",\r\n        },\r\n      ],\r\n    },\r\n  },\r\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Event",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/JSONForm/JSONForm.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<JSONForm>",
                    "defaultValue": "(args: JSONForm) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 4,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "AutoComplete",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/stories/Autocomplete/Autocomplete.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Window",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "JSONForm",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Window",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultSchema",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Event",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/JSONForm/JSONForm.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/docUtils.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DocUtils",
                "coveragePercent": 50,
                "coverageCount": "2/4",
                "status": "medium"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}